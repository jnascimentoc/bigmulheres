#Atividades pr√°ticas com if/else e switch/case:

#Exerc√≠cio 1
'''
1) Escreva um programa para calcular e imprimir o n√∫mero de l√¢mpadas necess√°rias para iluminar um determinado c√¥modo de uma resid√™ncia. 
Dados de entrada: a pot√™ncia da l√¢mpada utilizada (em watts), as dimens√µes (largura e comprimento, em metros) do c√¥modo. Considere que 
a pot√™ncia necess√°ria √© de 3 watts por metro quadrado e a cada 3 m¬≤ existe um bocal para uma l√¢mpada;
'''
def validar_entrada(mensagem):
    while True:
        valor = float(input(mensagem))
        if valor > 0:
            return valor
        else:
            print("‚ö†Ô∏è Digite um valor v√°lido.")

def potencia():
    area = largura * comprimento
    potencia_real = potencia_lampada * 3
    num_lampadas = int(potencia_real/potencia_lampada)
    bocais = int(area /3)

    print ("--------------------------------------")
    print("‚òëÔ∏è N√∫mero de l√¢mpadas necess√°rias:", int(num_lampadas))
    print("‚òëÔ∏è N√∫mero de bocais dispon√≠veis:", int(bocais)) #Impress√£o final 
    print ("--------------------------------------")

# Entrada de dados
potencia_lampada = validar_entrada('Digite a pot√™ncia da l√¢mpada (somente n√∫meros): ')
largura = validar_entrada('Digite a largura do c√¥modo (em metros): ')
comprimento = validar_entrada('Digite o comprimento do c√¥modo (em metros): ')
# Chamada da fun√ß√£o para calcular o n√∫mero de l√¢mpadas
potencia()


#Exercicio2
'''
2) Escreva um programa para ler as dimens√µes de uma cozinha retangular (comprimento, largura e altura), calcular e escrever a quantidade de 
caixas de azulejos para se colocar em todas as suas paredes (considere que n√£o ser√° descontada a √°rea ocupada por portas e janelas). Cada caixa 
de azulejos possui 1,5 m¬≤;
'''
#Entrada de dados | Utilizei a fun√ß√£o validar entrada j√° criada no exerc√≠cio 1
largura_cozinha = validar_entrada('Digite a largura da cozinha: ')           
comprimento_cozinha = validar_entrada('Digite o comprimento da cozinha: ')

area_cozinha = float(largura_cozinha * comprimento_cozinha)
azulejos = 1.5
necessarios = area_cozinha / azulejos

if necessarios < 1:
    print("Ser√° necess√°ria apenas 1 caixa de azuleijos.")
else:
    print("Ser√£o necess√°rias: ", necessarios, "caixas.")

#Exercicio 3
'''
3) Um motorista de t√°xi deseja calcular o rendimento de seu carro na pra√ßa. Sabendo-se que o pre√ßo do combust√≠vel √© de R$ 4,87, escreva um 
programa para ler: a marca√ß√£o do od√¥metro (km) no in√≠cio do dia, a marca√ß√£o (km) no final do dia, o n√∫mero de litros de combust√≠vel gasto e o 
valor total (R$) recebido dos passageiros. Calcular e escrever: a m√©dia do consumo em km/L e o lucro (l√≠quido) do dia;
'''
# Pre√ßo do combust√≠vel
preco_combustivel = 4.87


def calculo():
    distancia_percorrida = odometro_fim - odometro_inicio           #Dist√¢ncia percorrida
    consumo_medio = distancia_percorrida / litros_gastos            #Consumo m√©dio em km/L
    custo_combustivel = litros_gastos * preco_combustivel           #Custo do combust√≠vel
    lucro_liquido = valor_recebido - custo_combustivel              #Lucro l√≠quido
   
    print(f"M√©dia de consumo: {consumo_medio:.2f} km/L")
    print(f"Lucro l√≠quido do dia: R$ {lucro_liquido:.2f}")

# Entrada de dados | #Utilizei a fun√ß√£o validar entrada j√° criada no exerc√≠cio 1
odometro_inicio = validar_entrada('Digite a marca√ß√£o do od√¥metro (km) no in√≠cio do dia: ')
odometro_fim = validar_entrada('Digite a marca√ß√£o do od√¥metro (km) no final do dia: ')
litros_gastos = validar_entrada('Digite o n√∫mero de litros de combust√≠vel gasto: ')
valor_recebido = validar_entrada('Digite o valor total (R$) recebido dos passageiros: ')

# Verifica√ß√£o dos dados de entrada usando if/else
while True:
    if odometro_fim < odometro_inicio:
        print("A marca√ß√£o do od√¥metro no final do dia n√£o pode ser menor que no in√≠cio.")
    elif litros_gastos <= 0:
        print("O n√∫mero de litros de combust√≠vel deve ser maior que zero.")
    elif valor_recebido < 0:
        print("O valor recebido dos passageiros deve ser maior ou igual a zero.")
    else:
        calculo()
        break

#Exercicio 4
'''
4) Escreva um programa que leia o c√≥digo de origem de um produto e imprima na tela a regi√£o de sua proced√™ncia, conforme a tabela que foi passada.
Observa√ß√£o: caso o c√≥digo n√£o seja nenhum dos especificados, o produto deve ser encarado como ‚ÄúImportado‚Äù;
'''
#Fun√ß√£o STARTSWITH(), para verificar se o valor digitado √© igual ao valor no par√¢metro da fun√ß√£o

def identificar_regiao(codigo):
    if codigo.startswith("1"):
        return "‚òëÔ∏è Regi√£o Sul"
    elif codigo.startswith("2"):
        return "‚òëÔ∏è Regi√£o Norte"
    elif codigo.startswith("3"):
        return "‚òëÔ∏è Regi√£o Leste"
    elif codigo.startswith("4"):
        return "‚òëÔ∏è Regi√£o Oeste"
    elif codigo.startswith("5"):
        return "‚òëÔ∏è Regi√£o Nordeste"
    elif codigo.startswith("6"):
        return "‚òëÔ∏è Regi√£o Sudeste"
    elif codigo.startswith("7"):
        return "‚òëÔ∏è Regi√£o Centro-Oeste"
    elif codigo.startswith("8"):
        return "‚òëÔ∏è Regi√£o Noroeste"
    else:
        return "üåç Importado" 
    
codigo_produto = input("Digite o c√≥digo de origem do produto: ")

# Chama a fun√ß√£o e imprime a regi√£o de proced√™ncia
regiao = identificar_regiao(codigo_produto)
print ("--------------------------------------")
print(f"A regi√£o de proced√™ncia do produto √©: {regiao}")
print ("--------------------------------------")


#Exerc√≠cio 5
'''
5) Escreva um programa que leia as notas das duas avalia√ß√µes normais e a nota da avalia√ß√£o optativa dos estudantes de uma turma. Caso o estudante n√£o tenha feito a optativa, 
deve ser fornecido o valor -1. Calcular a m√©dia do semestre considerando que a prova optativa substitui a 
nota mais baixa entre as duas primeiras avalia√ß√µes. Escrever a m√©dia e mensagens que indiquem se o estudante foi aprovado, reprovado ou se 
est√° em exame, de acordo com as informa√ß√µes abaixo: 
Aprovado: m√©dia >= 6.0, Reprovado: m√©dia < 3.0, Exame: m√©dia >= 3.0 e < 6.0;
'''
def calcular_media(av1, av2, optativa):
#Se o aluno fez a optativa (n√£o √© -1), substituir a menor nota
    if optativa != -1:
        menor_nota = min(av1, av2)  #Encontra a menor nota
        if menor_nota == av1:
            av1 = optativa          #Substitui a AV1 
        else:
            av2 = optativa          #Substitui a AV2 

    media = (av1 + av2) / 2         #M√©dia final
    return media

def verificar_situacao(media):
    if media >= 6.0:
        return "‚úÖ Aprovad"
    elif media < 3.0:
        return "‚ùå Reprovado"
    else:
        return "üò£ O aluno dever√° realizar o exame final"

# Entrada de dados
av1 = float(input("Digite a nota da Avalia√ß√£o 1: "))
av2 = float(input("Digite a nota da Avalia√ß√£o 2: "))
optativa_resposta = input("O aluno realizou a optativa (S/N)? ").upper()

if optativa_resposta == 'S':
    optativa = float(input("Digite a nota da Avalia√ß√£o Optativa: "))
else:
    optativa = -1  # Caso o aluno n√£o tenha feito a optativa

media = calcular_media(av1, av2, optativa)  #Calcula a m√©dia
situacao = verificar_situacao(media)        #Verifica a situa√ß√£o

# Exibe o resultado
print ("--------------------------------------")
print(f" M√©dia do semestre: {media:.2f}")
print ("--------------------------------------")
print(f"Situa√ß√£o do estudante: {situacao}")
print ("--------------------------------------")


#Exercicio 6
'''
6) Escreva um programa para ler um valor e escrever se √© positivo ou negativo. Considere o valor zero como positivo.
'''

def verificador():
    if num >= 0:
        print("O n√∫mero", num, "√© positivo")
    else:
        print("O n√∫mero", num, "√© negativo")

num = float(input("Digite um n√∫mero: "))
verificador()